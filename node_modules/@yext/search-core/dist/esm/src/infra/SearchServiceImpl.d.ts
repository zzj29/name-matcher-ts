import { SearchService } from '../services/SearchService';
import { UniversalSearchRequest } from '../models/searchservice/request/UniversalSearchRequest';
import { UniversalSearchResponse } from '../models/searchservice/response/UniversalSearchResponse';
import { HttpService } from '../services/HttpService';
import { SearchConfigWithDefaulting } from '../models/core/SearchConfig';
import { VerticalSearchRequest } from '../models/searchservice/request/VerticalSearchRequest';
import { VerticalSearchResponse } from '../models/searchservice/response/VerticalSearchResponse';
import { ApiResponseValidator } from '../validation/ApiResponseValidator';
/**
 * The implementation of SearchService which hits LiveAPI.
 *
 * @internal
 */
export declare class SearchServiceImpl implements SearchService {
    private config;
    private httpService;
    private apiResponseValidator;
    private verticalSearchEndpoint;
    private universalSearchEndpoint;
    constructor(config: SearchConfigWithDefaulting, httpService: HttpService, apiResponseValidator: ApiResponseValidator);
    universalSearch(request: UniversalSearchRequest): Promise<UniversalSearchResponse>;
    verticalSearch(request: VerticalSearchRequest): Promise<VerticalSearchResponse>;
    /**
     * Converts a {@link LatLong} into the format the Search API expects.
     */
    private stringifyLatLong;
}
