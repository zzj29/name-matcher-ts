import { Environment } from './models/core/Environment';
import { CloudRegion } from './models/core/CloudRegion';
export var defaultApiVersion = 20220511;
/**
 * Provides methods for getting various endpoints.
 *
 * @internal
 */
var EndpointsFactory = /** @class */ (function () {
    function EndpointsFactory(config) {
        this.environment = (config === null || config === void 0 ? void 0 : config.environment) || Environment.PROD;
        this.cloudRegion = (config === null || config === void 0 ? void 0 : config.cloudRegion) || CloudRegion.US;
    }
    /** Provides the domain based on environment and cloud region. */
    EndpointsFactory.prototype.getDomain = function () {
        return "https://".concat(this.environment, "-cdn.").concat(this.cloudRegion, ".yextapis.com");
    };
    /** Provides all endpoints based on environment and cloud region. */
    EndpointsFactory.prototype.getEndpoints = function () {
        return {
            universalSearch: "".concat(this.getDomain(), "/v2/accounts/me/search/query"),
            verticalSearch: "".concat(this.getDomain(), "/v2/accounts/me/search/vertical/query"),
            questionSubmission: "".concat(this.getDomain(), "/v2/accounts/me/createQuestion"),
            status: 'https://answersstatus.pagescdn.com',
            universalAutocomplete: "".concat(this.getDomain(), "/v2/accounts/me/search/autocomplete"),
            verticalAutocomplete: "".concat(this.getDomain(), "/v2/accounts/me/search/vertical/autocomplete"),
            filterSearch: "".concat(this.getDomain(), "/v2/accounts/me/search/filtersearch"),
        };
    };
    return EndpointsFactory;
}());
export { EndpointsFactory };
/**
 * The endpoints to use for sandbox experiences.
 *
 * @deprecated Set the appropriate environment and cloud region in {@link ServingConfig} instead.
 *
 * @public
 */
export var SandboxEndpoints = new EndpointsFactory({ environment: Environment.SANDBOX, cloudRegion: CloudRegion.US })
    .getEndpoints();
//# sourceMappingURL=provideEndpoints.js.map