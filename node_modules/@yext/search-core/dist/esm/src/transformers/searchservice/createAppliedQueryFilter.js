var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { createFieldValueFilter } from '../core/createFieldValueFilter';
export function createAppliedQueryFilter(data) {
    return __assign({ displayKey: data.displayKey, displayValue: data.displayValue, filter: createFieldValueFilter(data.filter), type: data.type }, (data.details && { details: data.details }));
}
//# sourceMappingURL=createAppliedQueryFilter.js.map