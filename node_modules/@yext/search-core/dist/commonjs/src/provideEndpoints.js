"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SandboxEndpoints = exports.EndpointsFactory = exports.defaultApiVersion = void 0;
const Environment_1 = require("./models/core/Environment");
const CloudRegion_1 = require("./models/core/CloudRegion");
exports.defaultApiVersion = 20220511;
/**
 * Provides methods for getting various endpoints.
 *
 * @internal
 */
class EndpointsFactory {
    constructor(config) {
        this.environment = (config === null || config === void 0 ? void 0 : config.environment) || Environment_1.Environment.PROD;
        this.cloudRegion = (config === null || config === void 0 ? void 0 : config.cloudRegion) || CloudRegion_1.CloudRegion.US;
    }
    /** Provides the domain based on environment and cloud region. */
    getDomain() {
        return `https://${this.environment}-cdn.${this.cloudRegion}.yextapis.com`;
    }
    /** Provides all endpoints based on environment and cloud region. */
    getEndpoints() {
        return {
            universalSearch: `${this.getDomain()}/v2/accounts/me/search/query`,
            verticalSearch: `${this.getDomain()}/v2/accounts/me/search/vertical/query`,
            questionSubmission: `${this.getDomain()}/v2/accounts/me/createQuestion`,
            status: 'https://answersstatus.pagescdn.com',
            universalAutocomplete: `${this.getDomain()}/v2/accounts/me/search/autocomplete`,
            verticalAutocomplete: `${this.getDomain()}/v2/accounts/me/search/vertical/autocomplete`,
            filterSearch: `${this.getDomain()}/v2/accounts/me/search/filtersearch`,
        };
    }
}
exports.EndpointsFactory = EndpointsFactory;
/**
 * The endpoints to use for sandbox experiences.
 *
 * @deprecated Set the appropriate environment and cloud region in {@link ServingConfig} instead.
 *
 * @public
 */
exports.SandboxEndpoints = new EndpointsFactory({ environment: Environment_1.Environment.SANDBOX, cloudRegion: CloudRegion_1.CloudRegion.US })
    .getEndpoints();
//# sourceMappingURL=provideEndpoints.js.map